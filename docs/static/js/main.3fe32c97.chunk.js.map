{"version":3,"sources":["components/AddCategory.jsx","helpers/getGifs.js","components/GifGridItem.jsx","components/GifGrid.jsx","hooks/useFetchGifs.js","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","placeholder","onChange","target","getGifs","category","a","url","encodeURI","fetch","res","json","data","gifs","map","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","class","img","GifExpertApp","categories","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAmB9C,OACI,sBAAMC,SAZgB,SAACC,GACvBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAOlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,YAAY,iBACZC,SArBc,SAACR,GACvBF,EAAcE,EAAES,OAAOH,a,+BCNlBI,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEDI,MAAMF,GAFL,cAEbG,EAFa,gBAGIA,EAAIC,OAHR,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,SAAAF,GAAS,IAAD,EAC1B,MAAO,CACHG,GAAIH,EAAKG,GACTC,MAAOJ,EAAKI,MACZT,IAAG,UAAEK,EAAKK,cAAP,aAAE,EAAaC,iBAAiBX,QARxB,kBAYZM,GAZY,4CAAH,sDCAPM,EAAc,SAAC,GAAwB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOT,EAAU,EAAVA,IAIrC,OAFAa,QAAQC,IAAIN,EAAIC,EAAOT,GAGnB,sBAAKe,UAAU,gDAAf,UACI,qBAAKC,IAAMhB,EAAMiB,IAAMR,IACvB,kCAAMA,EAAN,WCJCS,EAAU,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,ECAb,SAAEA,GAAe,IAAD,EACdf,mBAAS,CAC/BsB,KAAM,GACNc,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAkBxC,OAZAC,qBAAU,WAENzB,EAASC,GACJyB,MAAM,SAACC,GACJH,EAAS,CACLhB,KAAMmB,EACNL,SAAS,SAItB,CAAErB,IAEEsB,EDhB2BK,CAAc3B,GAAlCY,EAFuB,EAE7BL,KAAcc,EAFe,EAEfA,QAEtB,OACI,qCACI,mCAAOrB,EAAP,OAEEqB,GAAW,qBAAKO,MAAM,WAExB,qBAAKX,UAAU,mBAAf,SAEYL,EAAOH,KAAK,SAACoB,GAAD,OACR,cAAC,EAAD,eAEQA,GADCA,EAAInB,aEf5BoB,EAAe,WAAO,IAAD,EAEM7C,mBAAS,CAAC,WAFhB,mBAEvB8C,EAFuB,KAEX/C,EAFW,KAI9B,OACI,gCACI,oBAAIiC,UAAU,oCAAd,0BACA,uBACA,cAAC,EAAD,CAAajC,cAAgBA,IAC7B,6BACI,8BAEQ+C,EAAWtB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAA0BA,SAAWA,GAAtBA,c,MCT3CgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3fe32c97.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleInputSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2 ){\r\n            setCategories( cats => [ inputValue, ...cats]);\r\n            setInputValue('')\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleInputSubmit} >\r\n            <input  \r\n                type=\"text\" \r\n                value={inputValue} \r\n                placeholder=\"Buscar meme...\"\r\n                onChange={ handleInputChange } \r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGifs = async( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=3OCSmkHkmGX6RAwZ2JhCOCYoTg3ezPud`\r\n    const res = await fetch(url);\r\n    const { data } = await res.json();\r\n    const gifs = data.map(data => {\r\n        return {\r\n            id: data.id,\r\n            title: data.title,\r\n            url: data.images?.downsized_medium.url\r\n        };\r\n    });\r\n\r\n    return gifs;\r\n} ","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n\r\n    console.log(id, title, url)\r\n\r\n    return (\r\n        <div className=\"gifCard animate__animated animate__bounceInUp\">\r\n            <img src={ url } alt={ title } />\r\n            <p> { title } </p> \r\n        </div>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    \r\n    const { data: images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3> { category } </h3>\r\n\r\n            { loading && <div class=\"loader\"></div> }\r\n\r\n            <div className=\"gifCardContainer\">\r\n                    {\r\n                        images.map( (img) => (\r\n                            <GifGridItem \r\n                                key={img.id}\r\n                                {...img}\r\n                            />\r\n                        ))\r\n                    }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        \r\n        getGifs( category )\r\n            .then( (imgs) => {\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            });\r\n\r\n    }, [ category ])\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Search']);\r\n\r\n    return (\r\n        <div>\r\n            <h2 className=\"animate__animated animate__zoomIn\">GifExpertApp</h2>\r\n            <hr />\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <h1>\r\n                <div>\r\n                    {\r\n                        categories.map( category =>(\r\n                            <GifGrid key={ category } category={ category }/>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </h1>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}